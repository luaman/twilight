dnl	$Id$
dnl
dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.13)
AC_INIT(nq/sv_main.c)
AC_REVISION($Revision$)

AM_INIT_AUTOMAKE(twilight,0.1.99)
AM_CONFIG_HEADER(include/config.h)


dnl Checkfs for system type
AC_CANONICAL_HOST

AC_MSG_CHECKING(Checking host type)
case "${host}" in
	*-*-mingw32*)
		SYS=Win32

		# Having both of these is kinda silly in win32...
		SHARECONF="~/twilight.conf"
		USERCONF="~/twilight.rc"
		;;
	*)
		# Default to POSIX compliant system
		SYS=POSIX

		SHARECONF="/etc/twilight.conf"
		USERCONF="~/.twilightrc"
		;;
esac
AC_MSG_RESULT($SYS)

AM_CONDITIONAL(SYS_POSIX, test "$SYS" = "POSIX")
AM_CONDITIONAL(SYS_WIN32, test "$SYS" = "Win32")


dnl Checks for programs
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_CHECK_PROG(CVS2CL, cvs2cl, cvs2cl)
AM_CONDITIONAL(CVS2CL, test "x$CVS2CL" != "x")

dnl Checks for build environment characteristics
AC_C_INLINE
AC_C_CONST
AC_EXEEXT
AC_OBJEXT
CFLAGS="-Wall -Werror $CFLAGS"


dnl Checks for functions and headers

AC_CHECK_FUNCS(
	strlcat strlcpy \
	snprintf _snprintf vsnprintf _vsnprintf \
	strcasecmp _stricmp strncasecmp _strnicmp \
	fcntl stat _stat mkdir _mkdir
)

AC_CHECK_HEADERS(
	unistd.h fcntl.h windef.h pwd.h sys/types.h sys/stat.h \
	limits.h signal.h
)

dnl Checks for paths
test "$prefix" = "NONE" && prefix="$ac_default_prefix"
test "x$exec_prefix" = "xNONE" && exec_prefix="$prefix"
eval PDIR="$prefix"
eval DDIR="$datadir"
eval BDIR="$bindir"

dnl userpath/sharepath config
AC_ARG_WITH(sharepath,
	[  --with-sharepath        Default shared data path [DATADIR/games/twilight]],,
	with_sharepath="$DDIR/games/twilight")
AC_DEFINE_UNQUOTED(SHAREPATH, "$with_sharepath")

AC_ARG_WITH(userpath,
	[  --with-userpath         Default user data path [\$HOME/.twilight]],,
	with_userpath="~/.twilight")
AC_DEFINE_UNQUOTED(USERPATH, "$with_userpath")

AC_ARG_WITH(shareconf,
	[  --with-shareconf        Default shared config [$SHARECONF]],,
	with_shareconf="$SHARECONF")
AC_DEFINE_UNQUOTED(SHARECONF, "$with_shareconf")

AC_ARG_WITH(userconf,
	[  --with-userconf         Default shared config [$USERCONF]],,
	with_userconf="$USERCONF")
AC_DEFINE_UNQUOTED(USERCONF, "$with_userconf")

dnl Check for SDL, fatal if not found
AM_PATH_SDL(1.2.0,
	,
	AC_MSG_ERROR([SDL 1.2 or above is required to build $PACKAGE])
)
SDLVER="$sdl_major_version.$sdl_minor_version.$sdl_micro_version"


dnl APIENTRY needs to be defined to nothing except on win32
if test "${SYS}" != "Win32"; then
	AC_DEFINE_UNQUOTED(APIENTRY,)
fi

dnl let the user choose the default OpenGL library
AC_ARG_WITH(opengl,
	[  --with-opengl           Default name of your OpenGL library
                          (only affects value of the gl_driver Cvar)],,
[if test "$SYS" = "Win32"; then
	with_opengl="opengl32.dll"
else
	with_opengl="libGL.so.1"
fi
])
AC_DEFINE_UNQUOTED(GL_LIBRARY, "$with_opengl")


AC_OUTPUT(
	Makefile
	twilight.spec
	include/Makefile
	nq/Makefile
	qw/Makefile
	qw-server/Makefile
	doc/Makefile
	doc/olddoc/Makefile
	gamecode/Makefile
	gamecode/progs/Makefile
	tools/Makefile
	debian/Makefile
)

AC_MSG_RESULT([
  Project Twilight v$VERSION configuration:
    Build system                : $SYS
    Compiler used               : $CC
    Compiler flags              : $CFLAGS
    SDL version                 : $SDLVER
    Default OpenGL library      : $with_opengl

  Path information
    Installation prefix         : $PDIR
    Binaries install to         : $BDIR
    Shared (read-only) data in  : $with_sharepath
    User (writable) data in     : $with_userpath
    Shared configuration        : $with_shareconf
    User's configuration        : $with_userconf

If something above doesn't look right, run ./configure --help to figure
out how to change it.  Otherwise, you are now ready to run make.
])

